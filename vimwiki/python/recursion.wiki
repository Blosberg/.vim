
some notes about [[recursion]]
portnames = ["PAN", "AMS", "CAS", "NYC", "HEL"]
 
def permutations( route, ports):
    # Write your recursive code here
    if( len(ports) > 1 ):
        newRoutes = [ route + [ports[x]] for x in range(len(ports))  ]
        newPorts  = [ ports[:x]+ports[x+1:]  for x in range(len(ports))  ]
        return(  [ permutations( newRoutes[x], newPorts[x] ) for x in range(len(newRoutes) ) ]   )
    else:
    # Print the port names in route when the recursion terminates
        route = route + ports
        print(' '.join([portnames[i] for i in route]))


# This will start the recursion with 0 ("PAN") as the first stop
permutations([0], list(range(1, len(portnames))))




Their solution:
Example Solution:

def permutations(route, ports):
    if len(ports) < 1:
        print(' '.join([portnames[i] for i in route]))
    else:
        for i in range(len(ports)):
            permutations(route+[ports[i]], ports[:i]+ports[i+1:])
 
permutations([0], list(range(1, len(portnames))))




